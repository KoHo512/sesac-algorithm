"""
정부에서는 신혼부부 가구를 대상으로 주택공급을 원활히 하기 위해 해피주택을 지었고, 
해피주택의 청약 당첨 순서를 정하려 합니다. 
청약 당첨의 우선순위를 정하는 기준은 아래와 같습니다. 
- 자녀가 있는 가구에게 우선순위를 줍니다. 
- 자녀의 유무가 같다면 자녀의 수가 더 많은 가구에게 우선순위를 줍니다. 
- 자녀의 유무와 자녀의 수가 같다면 청약 점수가 더 높은 가구에게 우선순위를 줍니다. 
- 모든 조건이 같은 경우 더 작은 고유번호를 부여받은 가구에게 우선순위를 줍니다. 
 
각 신혼부부 가구에게는 익명성을 보장하기 위해 세대주의 이름 대신 고유번호를 부여합니다. 
가구의 고유번호, 자녀의 유무, 자녀의 수, 청약 점수를 담은 2차원 배열 household가 solution함수의 매개변수로 주어집니다. 
위 기준에 따라 청약에 당첨될 순서대로 가구의 고유번호를 return하도록 solution함수를 작성하세요. 
 
매개변수 설명 
가구의 고유번호, 자녀의 유무 여부, 자녀의 수, 청약 점수를 담은 2차원 배열 household가 solution 함수의 매개변수로 주어집니다. 
- household의 길이는 3 이상 1,000 이하입니다. 
- household의 원소는 [가구의 고유번호, 자녀의 유무 여부, 자녀의 수, 청약 점수를] 형식입니다. 
- 가구의 고유번호는 1 이상 1,000 이하인 자연수입니다. 
- 가구의 고유번호가 같은 경우는 없습니다. 
- 자녀의 유무 여부는 자녀가 있는 경우 1, 자녀가 없는 경우 0으로 나타냅니다. 
- 자녀의 수는 0 이상 10 이하입니다. 
- 점수는 1 이상 100 이하인 자연수입니다. 
 
return값 설명  
기준에 따라 청약에 당첨될 순서대로 고유번호를 나열한 배열을 return 합니다.  
"""

def solution(household):
    # household.sort(key=lambda x: x[0])
    # household.sort(key=lambda x: -x[3])
    # household.sort(key=lambda x: -x[2])
    # household.sort(key=lambda x: -x[1])

    household.sort(key=lambda x: (-x[1], -x[2], -x[3], x[0]))

    return [house[0] for house in household]


# 아래는 테스트케이스 출력을 해보기 위한 코드입니다. 아래에는 잘못된 부분이 없으니 위의 코드만 수정하세요.
household = [[1,1,2,60], [2,1,2,85],[3,0,0,70],[4,0,0,70],[5,1,3,90]]
ret = solution(household)

# [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
print("solution 함수의 반환 값은", ret, "입니다.")