"""
B는 RTS(실시간 전략) 게임 대회에 참가하려고 합니다. 
이 게임은 기본으로 제공되는 일꾼으로 자원을 모아 다시 일꾼과 병사를 만들어 전쟁을 하는 게임입니다. 
일꾼과 병사는 동시에 뽑을 수 없어서 일꾼을 많이 뽑으면 자원이 많아지지만 병사는 늦게 만들어야 하고, 
일꾼을 적게 뽑으면 병사를 빨리 만들 수 있으나 자원이 적게 모입니다. 
B는 이 게임을 할 때, 일꾼을 많이 뽑는 전략을 선호합니다. 
B와 이미 게임을 같이 해본 몇몇 사람은 B가 일꾼을 많이 뽑는 전략을 사용한다는 것을 알고 있어 쉽게 이길 수 있습니다. 
그리고 이 사람들과 같이 게임을 한 사람들 역시 B의 전략을 알 수 있게 되어 쉽게 이길 수 있습니다. 
B가 이 게임 대회에서 열리는 모든 게임에 참가한다고 가정할 때, 
B의 전략을 알고 있거나 알 수 있는 사람들이 없어 B가 이길 수 있는 경기 횟수의 최댓값을 알고자 합니다. 
이 대회를 참가하는 모든 참가자들에게는 참가번호가 주어지고, B의 참가번호는 0번입니다. 
대회 참가자의 수 N, B의 게임 전략을 알고 있는 참가자 수와 참가번호를 나열하는 리스트 info, 
게임을 같이 진행할 참가자 번호를 나열하는 리스트 game이 solution 함수의 매개변수로 주어집니다. 
B가 일꾼을 많이 뽑는 전략으로 이길 수 있는 경기 횟수의 최댓값을 return하도록 함수를 작성해주세요. 
 
매개변수 설명 
대회 참가자의 수 N, B의 게임 전략을 알고 있는 참가자 수와 참가번호를 나열하는 리스트 info, 
게임을 같이 진행할 참가자 번호를 나열하는 리스트 game이 solution 함수의 매개변수로 주어집니다. 
- N은 2 이상 50 이하의 자연수입니다. 
- info의 길이는 2입니다. 
- info의 원소에서 0번 원소는 전략을 아는 참가자의 수이고 1번 원소는 전략을 아는 참가자들의 번호 배열이며 
    이 배열의 길이는 0번 원소의 값과 동일합니다. 
- game의 길이는 1이상 50 이하의 자연수이며, 게임 대회에서 열리는 경기 전체 횟수입니다. 
- game의 원소는 B와 같이 게임을 진행할 참가자들의 참가번호 리스트입니다. 
 
return 값 설명 
B의 전략을 알고 있거나 알 수 있는 사람들이 없어 B가 이길 수 있는 경기 횟수의 최댓값을 return 합니다.
"""

def solution(N, info, game):
    result = 0
    return result

# 아래는 테스트케이스 출력을 해보기 위한 코드입니다.
N = 5
info = [[ 1 ], [ 4 ]]
game = [[1, 2], [3], [3, 4]]
ret = solution(N, info, game)

# [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
print("solution 함수의 반환 값은", ret, "입니다.")

N = 7
info = [[ 3 ], [ 1, 2, 3 ]]
game = [[1], [2], [3], [4], [5], [6], [4, 5], [3, 6]]
ret = solution(N, info, game)

# [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
print("solution 함수의 반환 값은", ret, "입니다.")